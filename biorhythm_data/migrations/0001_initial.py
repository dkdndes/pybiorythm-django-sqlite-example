# Generated by Django 5.2.5 on 2025-08-10 17:57

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Person",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("name", models.CharField(help_text="Person's name or identifier", max_length=200)),
                ("birthdate", models.DateField(help_text="Birth date for biorhythm calculations")),
                (
                    "email",
                    models.EmailField(
                        blank=True, help_text="Optional contact email", max_length=254, null=True
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, help_text="Optional notes about this person"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Person",
                "verbose_name_plural": "People",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="BiorhythmCalculation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("start_date", models.DateField(help_text="Start date for calculation period")),
                ("end_date", models.DateField(help_text="End date for calculation period")),
                (
                    "days_calculated",
                    models.PositiveIntegerField(help_text="Number of days calculated"),
                ),
                (
                    "calculation_date",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When this calculation was performed"
                    ),
                ),
                (
                    "target_date",
                    models.DateField(help_text="Target date used as calculation reference"),
                ),
                (
                    "pybiorythm_version",
                    models.CharField(
                        blank=True, help_text="PyBiorythm library version used", max_length=50
                    ),
                ),
                ("notes", models.TextField(blank=True, help_text="Notes about this calculation")),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calculations",
                        to="biorhythm_data.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Biorhythm Calculation",
                "verbose_name_plural": "Biorhythm Calculations",
                "ordering": ["-calculation_date"],
            },
        ),
        migrations.CreateModel(
            name="BiorhythmAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("correlation", "Correlation Analysis"),
                            ("trend", "Trend Analysis"),
                            ("statistical_summary", "Statistical Summary"),
                            ("pattern_detection", "Pattern Detection"),
                            ("critical_day_analysis", "Critical Day Analysis"),
                        ],
                        help_text="Type of analysis performed",
                        max_length=50,
                    ),
                ),
                ("start_date", models.DateField(help_text="Start date of analyzed period")),
                ("end_date", models.DateField(help_text="End date of analyzed period")),
                (
                    "analysis_date",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When analysis was performed"
                    ),
                ),
                ("results", models.JSONField(help_text="Analysis results in JSON format")),
                ("summary", models.TextField(help_text="Human-readable summary of results")),
                (
                    "data_points_analyzed",
                    models.PositiveIntegerField(
                        help_text="Number of data points included in analysis"
                    ),
                ),
                (
                    "analysis_parameters",
                    models.JSONField(default=dict, help_text="Parameters used for analysis"),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analyses",
                        to="biorhythm_data.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Biorhythm Analysis",
                "verbose_name_plural": "Biorhythm Analyses",
                "ordering": ["-analysis_date"],
            },
        ),
        migrations.CreateModel(
            name="BiorhythmData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("date", models.DateField(help_text="Date for this biorhythm reading")),
                ("days_alive", models.PositiveIntegerField(help_text="Number of days since birth")),
                (
                    "physical",
                    models.FloatField(
                        help_text="Physical cycle value (-1.0 to 1.0)",
                        validators=[
                            django.core.validators.MinValueValidator(-1.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "emotional",
                    models.FloatField(
                        help_text="Emotional cycle value (-1.0 to 1.0)",
                        validators=[
                            django.core.validators.MinValueValidator(-1.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "intellectual",
                    models.FloatField(
                        help_text="Intellectual cycle value (-1.0 to 1.0)",
                        validators=[
                            django.core.validators.MinValueValidator(-1.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "is_physical_critical",
                    models.BooleanField(
                        default=False, help_text="Physical cycle near zero crossing"
                    ),
                ),
                (
                    "is_emotional_critical",
                    models.BooleanField(
                        default=False, help_text="Emotional cycle near zero crossing"
                    ),
                ),
                (
                    "is_intellectual_critical",
                    models.BooleanField(
                        default=False, help_text="Intellectual cycle near zero crossing"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "calculation",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="data_points",
                        to="biorhythm_data.biorhythmcalculation",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="biorhythm_entries",
                        to="biorhythm_data.person",
                    ),
                ),
            ],
            options={
                "verbose_name": "Biorhythm Data Point",
                "verbose_name_plural": "Biorhythm Data Points",
                "ordering": ["person", "date"],
                "indexes": [
                    models.Index(fields=["person", "date"], name="biorhythm_d_person__59ddd4_idx"),
                    models.Index(fields=["date"], name="biorhythm_d_date_db2612_idx"),
                    models.Index(fields=["days_alive"], name="biorhythm_d_days_al_d074ab_idx"),
                    models.Index(
                        fields=[
                            "is_physical_critical",
                            "is_emotional_critical",
                            "is_intellectual_critical",
                        ],
                        name="biorhythm_d_is_phys_93cd0a_idx",
                    ),
                ],
                "unique_together": {("person", "date")},
            },
        ),
    ]
